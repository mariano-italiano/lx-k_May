sudo ip a
sudo hostname
sudo swapon -s
sudo shutdown -h now
sudo free -h
sudo df -h
sudo 
sudo shutdown -h now
sudo free -h
sudo df -h
sudo shutdown -h now
sudo ip a
exit
sudo shutdown -h now
sudo systemctl status docker
sudo vim /etc/hosts
sudo swapon -s
sudo apt install -y docker.io
sudo apt -y install curl apt-transport-https
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt update
sudo apt install kubeadm
sudo modprobe overlay
sudo modprobe br_netfilter
sudo vim /etc/sysctl.d/kubernetes.conf
sudo sysctl --system
sudo vim /etc/docker/daemon.json
sudo systemctl restart docker
sudo kubeadm init --help
sudo kubeadm join --help
sudo kubeadm init
vim token
mkdir .kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
kubectl get nodes
ssh node1
cat token 
ssh node1
ssh node2
cat token 
ssh node2
kubectl get nodes
ssh node2
ssh node1
sudo shutdown -h now
sudo apt update && sudo apt upgrade
sudo swapon -s
sudo vi /etc/fstab 
ping -c 1 node1
ping -c 1 node2
sudo apt install -y docker.io
sudo apt -y install curl apt-transport-https
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
sudo mkdir /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
sudo apt-get update
sudo apt install kubeadm
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-cahce madison kubeadm
sudo apt-cache madison kubeadm
sudo apt install kubeadm=1.29.4-2.1
sudo -i 
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubectl get nodes
kubectl get pods -A
sudo -i
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
watch -n1 kubectl get pods -A
kubectl get nodes
kubeadm token create --print-join-command
kubectl get nodes
kubectl get ns
kubectl get pod -n kube-system
kubectl get pod 
kubectl create namespace web
kubectl get ns
kubectl api-resources
git clone https://github.com/mariano-italiano/lx-k_May.git
cd lx-k_May/
mkdir day1
cd day1
kubectl run pod1 --image nginx
kubectl get pod
kubectl describe pod1
kubectl describe pod pod1
kubectl run pod2 --image nginx --dry-run=client -o yaml
kubectl run pod2 --image nginx --dry-run=client -o yaml > pod2.yaml
kubectl apply -f pod2.yaml 
kubectl get pods
vi pod2.yaml 
kubectl apply -f pod2.yaml
vi pod2.yaml 
kubectl apply -f pod2.yaml
vi pod2.yaml 
kubectl apply -f pod2.yaml
kubectl replace --force -f pod2.yaml 
kubectl describe pod pod2
kubectl get pod -o wide --show-labels
kubectl get pod pod2 -o json
kubectl get pod pod2 -o json | jq '.metadata.name'
sudo apt  install jq -y
kubectl get pod pod2 -o json | jq '.metadata.name'
kubectl exec pod2 -- sh
kubectl exec -it pod2 -- sh
curl http://192.168.104.2
kubectl exec -it pod2 -- bash
kubectl exec -it pod2 -- ls -la 
kubectl exec -it pod2 -- hostname
kubectl get pod pod2 --v=10
kubectl get pod pod2 --v=7
kubectl delete pod pod1
kubectl delete -f pod2.yaml 
kubectl run pod1 --image nginx -l app=pod1 
kubectl get pod --show-lables
kubectl get pod --show-labels
kubectl config current-context
kubectl edit config kubernetes-admin@kubernetes
kubectl edit context kubernetes-admin@kubernetes
kubectl get-context kubernetes-admin@kubernetes -o yaml
kubectl get-contexts kubernetes-admin@kubernetes -o yaml
kubectl get-contexts
kubectl config get-contexts
kubectl config get-contexts kubernetes-admin@kubernetes -o yaml
kubectl config get-contexts kubernetes-admin@kubernetes 
kubectl configview kubernetes-admin@kubernetes 
kubectl config view kubernetes-admin@kubernetes 
kubectl config view 
git config --global credential.helper store
git status
cd ..
git add .
git commit -m "Adding day1 files"
git config --global user.email "markuj5@gmail.com"
git commit -m "Adding day1 files"
git pull
cat README.md 
git push
git pull
kubectl get nodes
kubectl describe node master
kubectl get pods -o wide
kubectl run nodename-pod --image nginx --dry-run=client -o yaml > nodename-pod.yaml
vi nodename-pod.yaml
kubectl apply -f nodename-pod.yaml
kubectl get pods -o wide
kubectl label node node2 env=prod
kubectl get nodes node2 | grep -i labels -A 7
kubectl get nodes node2 
kubectl describe nodes node2 | grep -i labels -A 7
cp -rp nodename-pod.yaml nodeselector-pod.yaml
vi nodeselector-pod.yaml
kubectl apply -f nodeselector-pod.yaml
vi nodeselector-pod.yaml
kubectl apply -f nodeselector-pod.yaml
kubectl get pods -o wide
cp -rp nodeselector-pod.yaml nodefake-pod.yaml
vi nodefake-pod.yaml
kubectl apply -f nodefake-pod.yaml
kubectl get pods -o wide
kubectl events
kubectl get pods -o wide
kubectl label node node2 country=poland
kubectl get pods -o wide
ls -la 
mv *.yaml day1/
history
history | cut -c 8- > day1-history.txt
